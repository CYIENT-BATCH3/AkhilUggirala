//WAP to swap numbers using function with temp variable using pointer variable by pass by reference
#include<stdio.h>		//include standard input and output header file using preprocessor directive
//Method-1
void swap (int *n1,int *n2)				//defintion off swap function
{
  int *n3;           //declare a temporary pointer variable 'n3'
  n3 = n2;			//assign address of n2 to n3
  n2 = n1;			//assign address of n1 to n2
  n1 = n3;			//assign address n3 to n1
  printf ("After Swap n1=%d n2=%d\n", *n1, *n2);	//prints the n1 & n2 after swap using pointer derefernce
}
/*
Method-2
void swap(int *n1,int *n2)
{
  int n3;           //declare a temporary  variable 'n3'
  n3 = *n2;			//assign n2 to n3 using *(derefernce operator)
  *n2 = *n1;			//assign n1 to n2 using *
  *n1 = n3;			//assign n3 to n1 using *
  printf ("After Swap n1=%d n2=%d\n", *n1, *n2);	//prints the n1 & n2 after swap
}
*/
int main ()				//start main function
{
 int x, y,*ptr,*ptr1;	//declare local variables x,y
 puts("Enter x and y");
 scanf("%d %d",&x,&y);
 printf ("Before Swap x=%d y=%d\n", x, y);	//prints the x & y before swap
 ptr=&x;        //assign the address of x to ptr
 ptr1=&y;       //assign the address of y to ptr
 swap (ptr,ptr1);			//calling swap function with pass by reference
}
